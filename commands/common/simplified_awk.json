{
  "command": "awk",
  "description": "A versatile programming language for working on files. More information: https://github.com/onetrueawk/awk.",
  "useCases": [
    {
      "description": "Print the fifth column (a.k.a. field) in a space-separated file:",
      "syntax": "awk '{print $5}' {{path/to/file}}"
    },
    {
      "description": "Print the second column of the lines containing \"foo\" in a space-separated file:",
      "syntax": "awk '/{{foo}}/ {print $2}' {{path/to/file}}"
    },
    {
      "description": "Print the last column of each line in a file, using a comma (instead of space) as a field separator:",
      "syntax": "awk -F ',' '{print $NF}' {{path/to/file}}"
    },
    {
      "description": "Sum the values in the first column of a file and print the total:",
      "syntax": "awk '{s+=$1} END {print s}' {{path/to/file}}"
    },
    {
      "description": "Print every third line starting from the first line:",
      "syntax": "awk 'NR%3==1' {{path/to/file}}"
    },
    {
      "description": "Print different values based on conditions:",
      "syntax": "awk '{if ($1 == &quot;foo&quot;) print &quot;Exact match foo&quot;; else if ($1 ~ &quot;bar&quot;) print &quot;Partial match bar&quot;; else print &quot;Baz&quot;}' {{path/to/file}}"
    },
    {
      "description": "Print all the lines which the 10th column value is between a min and a max:",
      "syntax": "awk '($10 &gt;= {{min_value}} &amp;&amp; $10 &lt;= {{max_value}})'"
    },
    {
      "description": "Print table of users with UID >=1000 with header and formatted output, using colon as separator (%-20s mean: 20 left-align string characters, %6s means: 6 right-align string characters):",
      "syntax": "awk 'BEGIN {FS=&quot;:&quot;;printf &quot;%-20s %6s %25s\\n&quot;, &quot;Name&quot;, &quot;UID&quot;, &quot;Shell&quot;} $4 &gt;= 1000 {printf &quot;%-20s %6d %25s\\n&quot;, $1, $4, $7}' /etc/passwd"
    }
  ]
}
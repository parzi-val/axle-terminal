{
  "command": "git-imerge",
  "description": "Perform a merge or rebase between two Git branches incrementally. Conflicts between branches are tracked down to pairs of individual commits, to simplify conflict resolution. More information: https://github.com/mhagger/git-imerge.",
  "useCases": [
    {
      "description": "Start imerge-based rebase (checkout the branch to be rebased, first):",
      "syntax": "git imerge rebase {{branch_to_rebase_onto}}"
    },
    {
      "description": "Start imerge-based merge (checkout the branch to merge into, first):",
      "syntax": "git imerge merge {{branch_to_be_merged}}"
    },
    {
      "description": "Show ASCII diagram of in-progress merge or rebase:",
      "syntax": "git imerge diagram"
    },
    {
      "description": "Continue imerge operation after resolving conflicts (git add the conflicted files, first):",
      "syntax": "git imerge continue --no-edit"
    },
    {
      "description": "Wrap up imerge operation, after all conflicts are resolved:",
      "syntax": "git imerge finish"
    },
    {
      "description": "Abort imerge operation, and return to the previous branch:",
      "syntax": "git-imerge remove &amp;&amp; git checkout {{previous_branch}}"
    }
  ]
}